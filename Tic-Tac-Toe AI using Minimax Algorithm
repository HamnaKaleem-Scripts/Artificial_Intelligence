import math

# Board representation
board = [' ' for _ in range(9)]

def print_board():
    print()
    for row in [board[i:i+3] for i in range(0, 9, 3)]:
        print('| ' + ' | '.join(row) + ' |')
    print()

def is_winner(player):
    win_combos = [
        [0,1,2], [3,4,5], [6,7,8], # rows
        [0,3,6], [1,4,7], [2,5,8], # columns
        [0,4,8], [2,4,6]           # diagonals
    ]
    return any(all(board[i] == player for i in combo) for combo in win_combos)

def is_full():
    return ' ' not in board

def get_available_moves():
    return [i for i, spot in enumerate(board) if spot == ' ']

def minimax(is_maximizing):
    if is_winner('O'):
        return 1
    elif is_winner('X'):
        return -1
    elif is_full():
        return 0

    if is_maximizing:
        best_score = -math.inf
        for move in get_available_moves():
            board[move] = 'O'
            score = minimax(False)
            board[move] = ' '
            best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for move in get_available_moves():
            board[move] = 'X'
            score = minimax(True)
            board[move] = ' '
            best_score = min(score, best_score)
        return best_score

def ai_move():
    best_score = -math.inf
    move = None
    for i in get_available_moves():
        board[i] = 'O'
        score = minimax(False)
        board[i] = ' '
        if score > best_score:
            best_score = score
            move = i
    board[move] = 'O'

def play_game():
    print("Tic-Tac-Toe (You are X, AI is O)")
    print_board()

    while True:
        # Player move
        try:
            move = int(input("Enter your move (1-9): ")) - 1
            if board[move] != ' ':
                print("Invalid move! Try again.")
                continue
        except:
            print("Please enter a number from 1 to 9.")
            continue

        board[move] = 'X'
        print_board()

        if is_winner('X'):
            print("You win! ðŸŽ‰")
            break
        if is_full():
            print("It's a tie!")
            break

        # AI move
        ai_move()
        print("AI played:")
        print_board()

        if is_winner('O'):
            print("AI wins! ðŸ’»")
            break
        if is_full():
            print("It's a tie!")
            break

# Start game
play_game()
